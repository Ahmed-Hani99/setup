// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//model nurses {
// id       Int    @id @default(autoincrement())
// title    String
// Hospital String
//phoneNum Float
// email    String}

model Staff {
  staID       Int     @id @default(autoincrement())
  staCPR      Int
  sDOB        String
  staPassword String
  staFName    String
  staLName    String
  staGender   String
  staJob      String
  staEmail    String
  staTel      Float
  staIsAdmin  Boolean
  Order       Order[]
}

//model Admin {
//staffID        Int      @unique
//admID          Int      @id @default(autoincrement())
//admCPR         Float
//admDateOfBirth String
//admPassword    String
//admName        String
//admEmail       String
//admGender      Boolean
//AdmTel         Float
//staff          Staff    @relation(fields: [staffID], references: [staID])
//}

model Doctor {
  dID           Int             @id @default(autoincrement())
  dCPR          Int
  dDOB          String
  dPassword     String
  dFName        String
  dFLame        String
  dGender       String
  dEmail        String
  dTel          Float
  dPicture      String
  hospitalName  String
  Prescriptions Prescriptions[]
}

model Customer {
  cusID         Int             @id @default(autoincrement())
  cusCPR        Int
  cDOB          String
  cusEmail      String
  cusFName      String
  cusLName      String
  cusGender     String
  cusStreet     Int
  cusCity       String
  cusBlock      Int
  cusHouse      Int
  cusPassword   String
  cusTel        Float
  Prescriptions Prescriptions[]
  Order         Order[]
  Cart          Cart[]
}

model Prescriptions {
  presID                 Int                      @id @default(autoincrement())
  Customer               Customer                 @relation(fields: [customerID], references: [cusID])
  customerID             Int
  Doctor                 Doctor                   @relation(fields: [doctorID], references: [dID])
  doctorID               Int
  presPicture            String
  hosClinVisitDate       String
  presDateApp            String
  presTitle              String
  PrescriptionsMedicines PrescriptionsMedicines[]
  Order                  Order?

  //Medicines    Medicines @relation(fields: [MedicineID], references: [medID])
  //MedicineID   Int
}

model Medicines {
  medID                  Int                      @id @default(autoincrement())
  medName                String
  medDescription         String
  medCategory            String
  medPrice               Int
  medAvailQuant          Int
  companyName            String
  medPicture             String
  medSpecification       String
  comments               String
  PrescriptionsMedicines PrescriptionsMedicines[]
  OrderMedicines         OrderMedicines[]
  CartMedicines          CartMedicines[]
}

model PrescriptionsMedicines {
  Prescriptions Prescriptions @relation(fields: [presID], references: [presID])
  presID        Int
  Medicines     Medicines     @relation(fields: [medID], references: [medID])
  medID         Int

  @@id([presID, medID])
}

model Order {
  ordID          Int              @id @default(autoincrement())
  customerID     Int
  staID          Int
  presID         Int              @unique
  description    String
  ordStatue      String
  ordDate        String
  totalAmount    Float
  OrderMedicines OrderMedicines[]
  Payment        Payment?
  Customer       Customer         @relation(fields: [customerID], references: [cusID])
  Staff          Staff            @relation(fields: [staID], references: [staID])
  Prescriptions  Prescriptions    @relation(fields: [presID], references: [presID])
}

model OrderMedicines {
  ordID       Int
  medID       Int
  ordQuantity Int
  Order       Order     @relation(fields: [ordID], references: [ordID])
  Medicines   Medicines @relation(fields: [medID], references: [medID])

  @@id([ordID, medID])
}

model Payment {
  paymentID   Int    @id @default(autoincrement())
  ordID       Int    @unique
  paymentDate String
  paymentType String
  payStatus   String
  Order       Order  @relation(fields: [ordID], references: [ordID])
}

model Cart {
  cartID        Int             @id @default(autoincrement())
  cusID         Int
  CartMedicines CartMedicines[]
  Customer      Customer        @relation(fields: [cusID], references: [cusID])
}

model CartMedicines {
  cartID    Int
  medID     Int
  Cart      Cart      @relation(fields: [cartID], references: [cartID])
  Medicines Medicines @relation(fields: [medID], references: [medID])

  @@id([cartID, medID])
}
